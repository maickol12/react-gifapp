{"version":3,"sources":["components/CategoryAdd.js","helper/getGifs.js","components/GifGridItem.js","components/CategoryGifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","trim","length","preventDefault","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","CategoryGifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categoryName","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAiCeA,EA7BK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,8BACI,sBAAMC,SARO,SAACC,GACdH,EAAWI,OAAOC,OAAS,GAC3BP,EAAYE,GAEhBG,EAAEG,kBAIE,SACI,uBACIC,KAAK,OACLC,MAAOR,EACPS,SAfU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,e,+BCNjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,gDAEkCC,UAAUH,GAF5C,+DAGKI,MAAOF,GAHZ,cAGbG,EAHa,gBAIKA,EAAKC,OAJV,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACnC,OACI,sBAAKc,UAAU,2BAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCAJO,EAAkB,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAI9B,ECPwB,SAACA,GACzB,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MACd,SAAAC,GACIH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAItB,CAACpB,IAEIqB,EDTgBK,CAAa1B,GAA7BO,EAAP,EAAOA,KAAKa,EAAZ,EAAYA,QAOZ,OACI,gCACI,2CAAepB,KACboB,GAAW,WACb,qBAAKJ,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAACC,GAAD,OACL,cAAC,EAAD,eAEQA,GADCA,EAAIC,GAAGD,EAAIE,gBED7Be,EApBM,WAEjB,MAAkCxC,mBAAS,CAAC,gBAA5C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAIA,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,YAPH,SAAC2C,GACd3C,EAAY,GAAD,mBAAK0C,GAAL,CAAgBC,QAQpB,6BACMD,EAAWnB,KAAI,SAACb,EAAMkC,GAAP,OAAiB,cAAC,EAAD,CAAqC9B,SAAUJ,GAA/C,aAA4BkC,aCXlFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5284221b.chunk.js","sourcesContent":["import Reat, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst CategoryAdd = ({ setCategory }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategory(inputValue);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange } />\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd;","\r\n \r\n export const getGifs = async( category ) => {\r\n    \r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=emDLS5x82wPczycH9HcUNRWDNrJLJVTd&limit=10`;\r\n     const resp      = await fetch( url );\r\n     const { data }  = await resp.json();\r\n     \r\n     const gifs = data.map( img => {\r\n         return{\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images?.downsized_medium.url\r\n         }\r\n     });\r\n     return gifs;\r\n }","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => { \r\n    return(\r\n        <div className='card animate__fadeIn_10s'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","//import React, { useState, useEffect } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n//import { getGifs } from '../helper/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const CategoryGifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n    // const [count, setCount ] = useState(0);\r\n    \r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs(category).then( setImages );\r\n    // } , []);\r\n\r\n   \r\n    return(\r\n        <div>\r\n            <h3>Category { category }</h3>\r\n            { loading && 'Cargando'}\r\n            <div className='card-grid'>\r\n                {\r\n                    data.map((img) => (\r\n                        <GifGridItem \r\n                            key={img.id+img.title}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helper/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then(\r\n            imgs =>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            }\r\n        );\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport { CategoryGifGrid } from './components/CategoryGifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    //const categories = ['One Punch','Samurai x','Dragon ball']\r\n    const [categories, setCategory] = useState(['Dragon ball']);\r\n    const handleAdd = (categoryName) => {\r\n         setCategory([...categories,categoryName]);\r\n    }\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <CategoryAdd setCategory={handleAdd}  />\r\n            {\r\n                <ol>\r\n                    { categories.map((value,index) => <CategoryGifGrid key={`cat${index}`} category={value} /> ) }\r\n                </ol>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}